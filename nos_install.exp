#!/usr/bin/expect -f
set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

proc error_condition { cmd } {
    send_user "***** error condition encountered *******\n"
    send_user "trying to execute $cmd\n"
    send_user "entering interact mode type interp to get an interpreter\n"
    interact "interp\r" { interpreter } 
}


proc console { cmd } {
    if {$cmd eq "shutdown"} {
       send -- "shutdown\r"
       expect "Shutting down main thread"
       wait 
       exit 0
    }
    send -- "$cmd\r"
    expect {
        "Command not implemented" { error_condition "console $cmd" }
        "Not enough or invalid parameters" { error_condition "console $cmd" }
        "Failed to open" { error_condition "console $cmd" }
        -re "\nOperator> $" {}
    }
    sleep 1
}

proc dsd { cmd } {
    console "e $cmd"
}

proc mount { unit tape {ring ""} } {
    if {$ring eq ""} {
        send -- "lt $unit,r,$tape\r"
        expect  {
            "Successfully loaded $tape" exp_continue
            "Failed to open" { error_condition "mount $unit $tape" }
            "Not enough or invalid parameters" { error_condition "mount $unit $tape" }
            "Invalid" { error_condition "mount $unit $tape" }
        -re "\nOperator> $" {}
        }
    } else {
        send "lt $unit,w,$tape\r"
        expect {
            "Successfully loaded $tape" exp_continue
            "Failed to open" { error_condition "mount $unit $tape ring" }
            "Not enough or invalid parameters" { error_condition "mount $unit $tape ring" }
            "Invalid" { error_condition "mount $unit $tape ring" }
        -re "\nOperator> $" {}
        }
    }
    sleep 1
}

proc unmount { unit } {
    send "ut $unit\r"
    expect  {
        "Successfully unloaded" exp_continue
        "not loaded" exp_continue
        "Not enough or invalid parameters" { error_condition "unmount $unit " }
        "Invalid" { error_condition "unmount $unit" }
    -re "\nOperator> $" {}
    }
    sleep 1
}

set timeout -1
spawn ./dtcyber
set dtcyber $spawn_id
match_max 100000
expect "Operator> "
spawn tail -F LP5xx_C07_E7
set printer $spawn_id
set spawn_id $dtcyber
#error_condition "test"
dsd "o!"
dsd "p!"
dsd "i=0"
dsd "d=yes"
dsd ""
dsd "next."
dsd "\]\]\]!"
dsd "initialize,al,5,6,10,11,12,13,14,15,16,17,20,21,22,23,24,25."
dsd "initialize,al,26."
dsd "go."
dsd "#1000#%year%%mon%%day%;%hour%%min%%sec%"
mount "13,0,1" "nos287-1.tap"
mount "13,0,2" "nos287-2.tap"
mount "13,0,3" "nos287-3.tap"
expect -i $printer "QUEUE FILE UTILITY COMPLETE"
dsd "unload,050."
mount "13,0,0" "extrapfs.tap"
send_user "\rDeadstart complete now launching sysgen(full)\r\r"
dsd "x.sysgen(full)"
expect -i $printer "E N D   F U L L"
send_user "\r Full sysgen complete now launching sysgen(source)\r\r"
dsd "xsysgen(source)"
expect -i $printer "E N D   S O U R C E"
dsd "unload,050."
mount "13,0,0" "y2k.tap"
send_user "\r\rSysgen Complete\r\r"
console "lc 11,7,network-batch-DEEP13.txt"
expect -i $printer ".REVERT. *** END OF NDLJOB ***"
dsd "x.dis."
dsd "user(install,install)"
dsd "settl(*)"
dsd "setjsl(*)"
dsd ",_load,tn=y2k871,un=ns2871"
dsd "load,fn=*,un=ns2871"
dsd "opl871,nam5871"
dsd "end"
dsd "^^dis."
dsd "els.reclaim."
dsd "change,opl871/ct=pu,ac=y."
dsd {[drop.}
expect -i $printer "Y2KNOS  I 99/05/20  99/05/20      11   NS2871    Y2K871   1   8"
expect -i $printer "OPL871  D 99/12/09  99/12/09   87369   NS2871    BC004P   1  51"
expect -i $printer "NAM5871 D 97/11/05  99/12/09   22314   NS2871    BC004P   1  57"
expect -i $printer "RECLAIM COMPLETE."
expect -i $printer "CHANGE,OPL871/CT=PU,AC=Y."
dsd "unload,050."
mount "13,0,0" "cy871b.tap"
dsd "vsn050,cy871b."
dsd "x.dis."
dsd "user(install,install)"
dsd "els.label(tape,vsn=cy871b,lb=ku,f=i,po=r)"
dsd "define(cy871b)"
dsd "copyei(tape,cy871b,v)"
dsd "** cy871b loaded"
dsd "dayfile."
dsd "exit."
dsd "** cy871b failed"
dsd "dayfile."
dsd {[drop.}
expect  {
    -i $printer "\\*\\* CY871B FAILED" { error_condition "cy871b job failed" }
    -i $printer "\\*\\* CY871B LOADED" {}
}
console "rp 7,7"
sleep 3
dsd  "idle,mag."
dsd "\[unlock."
dsd "che"
sleep 4
dsd "step."
console "shutdown"
